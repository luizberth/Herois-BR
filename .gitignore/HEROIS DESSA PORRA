#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <locale.h>
#define HEALTHMINIMO 50
#define HEALTHMAXIMO 100
#define HEALTHEXTRAMAXIMO 50
#define HEALTHEXTRAMINIMO 0
#define CRITICOMAXIMO 50
#define CRITICOMINIMO 10
#define QNTDPERSO 4
#define QNTDARMA 3

char VetTipoPersonagem[4][100] = {"BOLSONARO", "NEYMAR", "COUTINHO", "TITE"};
char VetTipoArma[3][100]={"PEDALADA", "AK47", "CHUTE"};

int statsPlayer[5];
/*
[0] = Tipo Personagem
[1] = Tipo Arma
[2] = Health
[3] = Acerto Critico
[4] = Health Extra
*/
int statsCPU[5];
/*
[0] = Tipo Personagem
[1] = Tipo Arma
[2] = Health
[3] = Acerto Critico
[4] = Health Extra
*/

void EscolherPersonagem(int Escolher);
void EscolherArma(int OpcaoArma);

int sentinela;
int FimJogo = 0;
int FimSelecao = 0;
int FimRodada = 0;
int NumChute;

int main()
{
    int Escolher = 0, OpcaoArma, Opcao;
    int totalCP = 0, totalP=0, soma;
    int totalPE = 0,TotalAK = 0, totalCH = 0;
    int totalBolso = 0, totalNey = 0, totalTite = 0, totalCou = 0;
    int contadorPE, contadorAK, contadorCH;
    int contadorBolso, contadorNey, contadorTite, contadorCou;
    setlocale(LC_ALL, "Portuguese");
    srand(time(NULL));
    printf("\n\n");
    printf("OS HEROIS BRASILEIROS.\n");
    printf("\n\n");

    system("pause");
    system("cls");
    while (FimJogo==0){
        do{
                do{
                    contadorBolso = 0;
                    contadorCou = 0;
                    contadorNey = 0;
                    contadorTite = 0;
                    printf("Escolha seu personagem:\n\n");
                    printf("1 - %s.\n\n", VetTipoPersonagem[0]);
                    printf("2 - %s.\n\n", VetTipoPersonagem[1]);
                    printf("3 - %s.\n\n", VetTipoPersonagem[2]);
                    printf("4 - %s. \n\n", VetTipoPersonagem[3]);
                    printf("Resposta:");
                    scanf("%i", &Escolher);
                    statsPlayer[0] = Escolher;
                    system("cls");
                    if(Escolher == 1)
                    {
                        printf("Meu personagem: %s\n\n", VetTipoPersonagem[0]);
                        sentinela = 1;
                        contadorBolso = contadorBolso + 1;
                    }
                    else if (Escolher == 2)
                    {
                        printf("Meu personagem: %s\n\n", VetTipoPersonagem[1]);
                        sentinela = 1;
                        contadorNey = contadorNey + 1;
                    }
                    else if (Escolher == 3)
                    {
                        printf("Meu personagem: %s\n\n", VetTipoPersonagem[2]);
                        sentinela = 1;
                        contadorCou = contadorCou + 1;
                    }
                    else if (Escolher == 4)
                    {
                        printf("Meu personagem: %s\n\n", VetTipoPersonagem[3]);
                        sentinela = 1;
                        contadorTite = contadorTite + 1;
                    }
                    else
                    {
                     printf("ERRO!!! TENTE NOVAMENTE.\n");
                     system("pause");
                     system("cls");
                     sentinela = 0;
                    }
                    EscolherPersonagem(Escolher);
                    system("pause");
                    system("cls");
                }while(sentinela == 0);

                do{
                    contadorAK = 0;
                    contadorCH = 0;
                    contadorPE = 0;
                    printf("Escolha sua arma:\n\n");
                    printf("1 - %s.\n\n", VetTipoArma[0]);
                    printf("2 - %s.\n\n", VetTipoArma[1]);
                    printf("3 - %s.\n\n", VetTipoArma[2]);
                    printf("Resposta:");
                    scanf("%i", &OpcaoArma);
                    OpcaoArma--;
                    statsPlayer[1] = OpcaoArma;
                    system("cls");
                    if(OpcaoArma == 0)
                    {
                        printf("Minha Arma: %s\n\n", VetTipoArma[0]);
                        sentinela = 1;
                        FimSelecao = 1;
                        contadorPE = contadorPE + 1;
                    }
                    else if(OpcaoArma == 1)
                    {
                        printf("Minha Arma: %s\n\n", VetTipoArma[1]);
                        sentinela = 1;
                        FimSelecao = 1;
                        contadorAK = contadorAK + 1;
                    }
                    else if(OpcaoArma == 2)
                    {
                        printf("Minha Arma: %s\n\n", VetTipoArma[2]);
                        sentinela = 1;
                        FimSelecao = 1;
                        contadorCH = contadorCH + 1;
                    }
                    else
                    {
                        printf("ERRO!!!! TENTE NOVAMENTE.\n");
                        system("pause");
                        system("cls");
                        sentinela = 0;
                        FimSelecao = 0;
                    }
                    EscolherArma(OpcaoArma);
                    system("pause");
                    system("cls");


                }while(sentinela == 0);

        }while(FimSelecao == 0);

            statsPlayer[2] = rand() % (HEALTHMAXIMO - HEALTHMINIMO + 1) + HEALTHMINIMO;
            statsPlayer[3] = rand() % (CRITICOMAXIMO + 1);

            statsCPU[0] = rand() % (QNTDPERSO + 1);
            statsCPU[1] = rand() % (QNTDARMA + 1);
            statsCPU[2] = rand() % (HEALTHMAXIMO - HEALTHMINIMO + 1) + HEALTHMINIMO;
            statsCPU[3] = rand() % (CRITICOMAXIMO + 1);
            statsCPU[4] = rand() % (HEALTHEXTRAMAXIMO + 1);

            int numero;
            NumChute = rand() % (20 + 1);
            do{
                    printf("Digite um numero aleatorio entre [%i , %i]:\n\n", HEALTHEXTRAMINIMO, HEALTHEXTRAMAXIMO);
                    scanf("%i", &numero);
                    if(numero < HEALTHEXTRAMINIMO || numero > HEALTHEXTRAMAXIMO )
                    {
                        sentinela = 0;
                        printf("ERRO!! Digite valores entre %i e %i.",HEALTHEXTRAMINIMO, HEALTHEXTRAMAXIMO);
                        system("pause");
                        system("cls");
                    }
                    else
                    {
                        sentinela = 1;
                        printf("\n Você chutou o numero %i e ", numero);
                        if (NumChute == numero)
                        {
                            printf("acertou!!!!! você ganhou");
                            statsPlayer[4] = 15;
                        }
                        else
                        {
                            printf("errou...infelizmente você perdeu");
                            statsPlayer[4] = 0;
                        }
                        printf(" 15 pontos de HP extra.\n");
                        system("pause");
                        system("cls");
                    }
            }while(sentinela == 0);

            sentinela = 0;
            //HP EXTRA DO COMPUTADOR
            numero = rand() % (20 + 1);
            NumChute = rand() % (20 + 1);

            printf("O CPU chutou o número %i e ", numero);
            if(numero == NumChute)
            {
                printf("acertou!! o CPU ganhou");
                statsCPU[4] = 15;
            }
            else
            {
                printf("errou, o CPU perdeu");
                statsCPU[4] = 0;
            }
            printf(" 15 pontos de HP extra.\n");
            system("pause");
            system("cls");

            //DADOS DO PERSONAGEM
            printf("Dados do seu personagem:\n");
            printf("Personagem: %s.\n", VetTipoPersonagem[statsPlayer[0] - 1]);
            printf("HP: %i.\n",statsPlayer[2]);
            printf("Arma: %s.\n", VetTipoArma[statsPlayer[1]]);
            printf("HP Extra: %i.\n", statsPlayer[4]);
            printf("Chance de acerto critico: %i.\n", statsPlayer[3]);
            system("pause");
            system("cls");


        do{
                int healthplayer;
                int healthcpu, contadorP, contadorCP;

            printf("MENU\n");
            printf("1) Imprime o contexto do jogo.\n");
            printf("2) Gera um oponente automaticamente (VetorCPU)\n");
            printf("3) Roda a batalha\n");
            printf("4) Imprimir alguma estatistica ou relatorio\n");
            printf("de uma batalha realizada.\n");
            printf("5)Sair do jogo e imprimir um relatorio TOTAL.\n");
            printf("\nSua Opcao: ");
            scanf("%i", &Opcao);
            system("cls");
            if (Opcao == 1)
            {
                printf("Em um universo alternativo, os heróis mais poderosos da terra, tendem a\n");
                printf("fazer um batalha para ver quem receberá o prêmio de mais forte de todos\n");
                printf("os tempos, e por incrível que pareça os heroes mais poderosos da terra \n");
                printf("estão no brasil.\n");
                printf("Desta batalha incessante sobraram apenas quatro dos maiores herois \n");
                printf("brasileiros, são eles: Bolsonaro, Neymar, Coutinho e Tite, você escolheu\n");
                printf("%s e o computador escolheu %s para batalhar, represente bem eles e boa\n", VetTipoPersonagem[statsPlayer[0]- 1], VetTipoPersonagem[statsCPU[0]]);
                printf("sorte na batalha!!!!\n");
                system("pause");
                system("cls");
            }
            else if(Opcao == 2)
            {

                printf("Dados do CPU:\n");
                printf("NOME: %s.\n", VetTipoPersonagem[statsCPU[0]]);
                printf("HP: %i.\n",statsCPU[2]);
                printf("Arma: %s.\n", VetTipoArma[statsCPU[1]]);
                printf("HP Extra: %i.\n", statsCPU[4]);
                system("pause");
                system("cls");
            }
            else if(Opcao == 3)
            {
                healthplayer = statsPlayer[2] + statsPlayer[4];
                healthcpu = statsCPU[2] + statsCPU[4];
                contadorP = 0;
                contadorCP = 0;
                soma = 0;
                int criticoPlayer= statsPlayer[3];
                int criticoCPU= statsCPU[3];
                printf("BATALHA INICIADA!!!\n");
                printf("BATALHA ENTRE %s E %s.\n",VetTipoPersonagem[statsPlayer[0] - 1], VetTipoPersonagem[statsCPU[0]]);
                system("pause");
                system("cls");

                while(healthcpu > 0 || healthplayer > 0){
                    if (healthplayer <=0 || healthcpu <= 0)
                        {
                            printf("HP %s: %i\n",VetTipoPersonagem[statsPlayer[0] - 1], healthplayer);
                            printf("HP %s: %i\n",VetTipoPersonagem[statsCPU[0]] ,healthcpu);
                            system("pause");
                            system("cls");
                            break;
                        }
                    else
                    {
                        sentinela = rand() % 10 + 1;
                        if(sentinela == 1)
                        {
                            printf("O %s ACERTOU UM ATAQUE CRITICO.\n",VetTipoPersonagem[statsPlayer[0] - 1]);
                            healthcpu = healthcpu - (criticoPlayer + rand() % (10) + 1);
                            printf("HP %s: %i\n",VetTipoPersonagem[statsPlayer[0] - 1], healthplayer);
                            printf("HP %s: %i\n",VetTipoPersonagem[statsCPU[0]] ,healthcpu);
                            system("pause");
                            system("cls");
                        }
                        else if (sentinela == 2)
                        {
                            printf("O %s ACERTOU UM ATAQUE CRITICO!!!\n",VetTipoPersonagem[statsCPU[0]]);
                            healthplayer = healthplayer - (criticoCPU + rand() % (10) + 1);
                            contadorCP= contadorCP + 1;
                            printf("HP %s: %i\n",VetTipoPersonagem[statsPlayer[0] - 1], healthplayer);
                            printf("HP %s: %i\n",VetTipoPersonagem[statsCPU[0]] ,healthcpu);
                            system("pause");
                            system("cls");
                        }
                        else if(sentinela >= 3 && sentinela <=6)
                        {
                            printf("O %s ACERTOU UM ATAQUE.\n",VetTipoPersonagem[statsPlayer[0] - 1]);
                            healthcpu = healthcpu - rand() % (10) + 1;
                            contadorP= contadorP + 1;
                            printf("HP %s: %i\n",VetTipoPersonagem[statsPlayer[0] - 1], healthplayer);
                            printf("HP %s: %i\n",VetTipoPersonagem[statsCPU[0]] ,healthcpu);
                            system("pause");
                            system("cls");
                        }
                        else
                        {
                            printf("O %s ACERTOU UM ATAQUE.\n",VetTipoPersonagem[statsCPU[0]]);
                            healthplayer = healthplayer - rand() % (10) + 1;
                            contadorCP= contadorCP + 1;
                            printf("HP %s: %i\n",VetTipoPersonagem[statsPlayer[0] - 1], healthplayer);
                            printf("HP %s: %i\n",VetTipoPersonagem[statsCPU[0]] ,healthcpu);
                            system("pause");
                            system("cls");
                        }
                        soma= contadorCP + contadorP;
                    }

                }





            }
            else if(Opcao == 4)
            {
                printf("HP DO %s ANTES DA BATALHA: %i\n",VetTipoPersonagem[statsPlayer[0] - 1], statsPlayer[2] + statsPlayer[4]);
                printf("HP DO %s ANTES DA BATALHA: %i\n",VetTipoPersonagem[statsCPU[0]], statsCPU[2] + statsCPU[4] );
                printf("HP FINAL DO %s: %i\n", VetTipoPersonagem[statsPlayer[0] - 1], healthplayer);
                printf("HP FINAL DO %s: %i\n", VetTipoPersonagem[statsCPU[0]], healthcpu);
                printf("CRITICO %s: %i\n", VetTipoPersonagem[statsPlayer[0] - 1], statsPlayer[3]);
                printf("CRITICO %s: %i\n", VetTipoPersonagem[statsCPU[0]], statsCPU[3]);
                printf("QUANTIDADE DE GOLPES %s: %i\n",VetTipoPersonagem[statsPlayer[0] - 1], contadorP);
                printf("QUANTIDADE DE GOLPES %s: %i\n",VetTipoPersonagem[statsCPU[0]], contadorCP);
                printf("SOMA DOS GOLPES: %i.\n", soma);
                system("pause");
                system("cls");
            }
            else if (Opcao == 5)
            {
                totalCP = totalCP + contadorCP;
                totalP = totalP + contadorP;
                totalCH = totalCH + contadorCH;
                TotalAK = TotalAK + contadorAK;
                totalPE = totalPE + contadorPE;
                totalBolso = totalBolso + contadorBolso;
                totalCou = totalCou + contadorCou;
                totalNey = totalNey + contadorNey;
                totalTite = totalTite + contadorTite;

                printf("TOTAL DE GOLPES DADO PELO PLAYER: %i.\n", totalP);
                printf("TOTAL DE GOLPES DADO PELO CPU: %i.\n", totalCP);
                printf("A PEDALADA FOI ESCOLHIDA: %i VEZES.\n", totalPE);
                printf("A AK47 FOI ESCOLHIDA: %i VEZES.\n", TotalAK);
                printf("O CHUTE FOI ESCOLHIDO: %i VEZES.\n", totalCH);
                printf("O BOLSONARO FOI ESCOLHIDO: %i VEZES.\n", totalBolso);
                printf("O NEYMAR FOI ESCOLHIDO: %i VEZES.\n", totalNey);
                printf("O COUTINHO FOI ESCOLHIDO: %i VEZES.\n", totalCou);
                printf("O TITE FOI ESCOLHIDO: %i VEZES.\n", totalTite);

                system("pause");
                system("cls");
            }
        }while(Opcao != 5);
    }
    return 0;
}
void EscolherPersonagem(int Escolher)
{
    if(Escolher == 1)
    {
printf("C   .............     iYY;7i..:..   .................. \n");
printf("Q:                 izB$$bU17;i::,:.                   7\n");
printf("E0t   . .....   :bMMMMMMMMMMMMM@#W8US:   ............ c\n");
printf("9AW6   . . .   7MMMMQEEQWMMMMMMMMMMM@MQY   ........... \n");
printf("Zo8EQ.    ...  MM@;  .....i;Y7nU$@MMMMMMM,  ....... . .\n");
printf("A2U9bB;       vM1   .. .       ..,;n0MMMMM,  ......... \n");
printf("6o9A69$I.   :;Ev  ..,.,.......,,,..  iE$#MMv  ... . .. \n");
printf("A2U6I96QW; i69b...,:,,.,.....,.::i:;:.,v.AMM   ... .   \n");
printf("Zz6I9A6Ib0n1tUi.:,:,,........ ..,,:iv;v11:bMM   .      \n");
printf("AIA6U6U6I69IXYi::,.      ............:7Q#oU@M  .   .ioA\n");
printf("9oZA9UAI6zEIc71i,:i,::iii;:iicU8Q9Q$U,:SM0BWM.   .tZbAn\n");
printf("9U6966I6UzQUcEE,,nz6@MMMMo ,$MMMMMMMM@ti9$BWM:  CEIIoo7\n");
printf("bIZ6ZA6UAn#I7#0.;1bE#M@#@7  ZM@UCQB@MMW;vb$bM6.IZoo11t7\n");
printf("9A6869U6I2WE7$v.:tAC;2vv:: .iZt7CYCISi.,;0M$MMn2SotS1S7\n");
printf("EA89b68A6UAboZ7.,.::ii;,::.  2C::::::,;;YUW$MCYnonn1n1C\n");
printf("b8bb98Z969IbU8o,,,.,,,..,,..;C7Y,::iYonocS;C@iCo1StSto7\n");
printf("E9Ebb9b686Z8XiC:::;:,.ii:WEQMM#i:::,::7CYCnc..2tnto1n1C\n");
printf("EbbEbbZb98ZQi.:v:i:,.ic..Yiob#b,.:iccYY2CYtWnc1z1nCStS7\n");
printf("WbQb0bEbbZbE9 .ii:::i;,...ii:SAIE6zttIA9S;9W2nooo1nnotC\n");
printf("Q0EQEQbbbE8E0i.:i;iiivYQI6nCSZAQ@M#C;008ttISCo1zno1o1zX\n");
printf("BEW0QE0EE8EbQ0ZEv:;vicEz;:ivCC221nUiYbbUo6SSo12nS1znzSC\n");
printf("WQQWQW0QE0E0EQ0$Zii;iXv,,,,::ii:,Yv1AEAIZ67IozSo1znonzX\n");
printf("$0BQW0W0W00E0E0E$tivvc;,,.,,Yii;Yt6EQ9A8WC7ZA22o2oznzSt\n");
printf("WQWBWWQW0QQQE0EQ0$i;77Y7;v7U6nUQEEEWEZbWEC;C8E66IU2zoUC\n");
printf("#QBQBQWQWQWQQ0Q0Q$I.;YSzA29EWWQEQ00bbbQQEziv.Y8EEZ9IAIS\n");
printf("$BW$W$WWWWQW0WQQQ$@X,;v7YYcXAEEbZb699bZbQn c, .:;ZQQEEI\n");
printf("$W$B$B$W$Q$QBW$W@MMCi;;i;ii;cXz6Z66AbbbWZ  i;..   ,:XS6\n");
printf("$WW$B#B$W$B$$@@M@Z..:;cv;vcYv71AUAAZbQ$U...Y:,.,..     \n");
printf("MMM#$$#$#$#@MMQ;  .:i v7Xct7YYSoA2bEWQ7.::CY:.,,,....  \n");
printf("#@@@$$$#@MM@C.   ..iY. ,v1nX;YConA8#o..::icv;:.,.,..,, \n");
printf("$Q$$@@MMMM;  ...,,:ii;   .vonCIzIZW; .:,:;i,ii:......, \n");
printf("@@@MMM#1.  .,:...,,i:;;    .,Y6ZAY   ,.,,:.i:,,,.... ..\n");
printf("MMM$7     ,::.....::::Y:  .  ,UEBEEi   .,,,ii::.,.:YoI,\n");
printf("8;     ..,,,,....,,::::X.   to1QQ$@MMU  .,,:,:.,::zbv. \n");
printf("     ...,.,.:;Yv:,:,:,:iv  MMWcoQ0W#MMM1..:::::::.. .. \n");
printf("   ........,.,,,.:,,,:,,i.WMMME;8$#MB##2.ivv;;iii;ii,.i\n");
printf(", ....,.,.,...,,,,::::i:.9Mv ,Mb8#M8z8C,i7tXCY7XXc7ci6W\n");
printf("i,ii:iiiiiiiiii;i;i;;vvciv@A.,bQBMQ28ECYn966UUU81CoCWMc\n");
printf("UvC77cYYYcYvX77Y7YXYYY7Y7iS9YYECEM@I9oCCUIUSoo2oUUS0MC;\n");
    }
    else if(Escolher == 2)
    {
printf("M@@@@@@@@@@#QASC7cYYC1zAbQ$#@$WQWQWB##@@@@M@@@M@@@@@@@@@@@@@@@#$$####$EA268bQW$#\n");
printf("M@@@#@@@@@@#WE2t7v;;;c71SI9EWQEb669EQ$#@@@#$$##@@@@@@@@@@@#@@@#####@#$QbI668EQ$$\n");
printf("Q$MM@@@@@@@@@#$E8UIStCCCnoUZQWWQEbEQB$@@@$QEbZW@WQ##@@@@#####@M@@@@@@@@$WWWW$#@#\n");
printf("cS#M@@@@@@@@$$WWQEb8A2nCCSUbW#$$WQ0W$##@#$9CzWM@##$@MM$$$$WW$#@@@MMM@M@@###@@@#$\n");
printf("vXBM@@M@M@@#$Q0QWWQb6I2oo28Q$##$$WWW$$@@@$1n@MMMMMMMMMMM$QQ0W$#@MMMMMMM@@@@@@@#B\n");
printf("o6#@MM@@@@@@#$B$WQ00ZAAbEQB#@@#$$WB$$##@ME$MMM@QbICt8MMM@QQWW$#@MMWtzEMMM@@@@@@#\n");
printf("Q$@@@@@#$WWW$####WWWWQW$##@MM@@#$WB$##@@M6b@@$QUnoci.iMM@$$$$$#MQi.    CMMM@@@@@\n");
printf("$$#$$$$W8bbbE#####$$$#@@@@#$WWW$##$#@@@MM2CQW$#QE;v7;..Q@#####@MXtQ9t1v ,MMMM@@@\n");
printf("QEWQWW$099bbQ$#$##@@@@@@#06oSSIZW#@@@@@MMAcAB#$IMZ,:t  QM@###@@MEAW#@@Y.  .YMM@#\n");
printf("Eb0QQQ00bbbW#@##$####@@#QICc;;YC2E$#@@@@MW.cb#bv2W.:7 1M@@#@#@@@M@$$@@      MM@$\n");
printf("Q9EE00Q0QQ$$@@@@###$$#$WQA1Y;;vXoZW$@@@@ME 1#M$c;,;;i.:M@#$$###$#$B0QMt .   @M@$\n");
printf("EZ8bbE0Q0W$#@@MMM@@#$$WWWE66I2oUbW#@MMM@$i,nb8AICcCoY:7#M$$$WBWWWWWQW@M.    iM@#\n");
printf("QZb8bbE00EQW$#@MM@#$$WWQWWB$$$#MMMMQEv.        .:1Wzv,EMMM@#$BBQQQWWB$M7     @M@\n");
printf("E8bbZZ6AUI2IU9b0bbbEEbbE0WW#MMM$97          ..      ,    ,ibb$##0Ebbb0@2 ..  CM$\n");
printf("bZ0Eb96IIzoSSo2zz2A6ZZ8bbb#$t,   iSi S,ZiX:vX: 2o,  . .        cQ00EQ$MI ,.   @E\n");
printf("960QQbbb89AU2zo22UAZbb88E#C    ..,Y, ,,iv:cv; :E6A:.  ,....        ii i,  .   IW\n");
printf("QbQB$WWBWQWEbZ8bbEQQQEE$@;  ..,.      ...     ...iC7, . ,,.:. i6   ;    ,.    :@\n");
printf("$QQQbbbEEQQQEbbEbEEEbE@B   ..v:  .AQA,   ,7Soc.   .;Xv.i:7..; MMM#M#    ..     $\n");
printf("$QbUSCtnzIAUIIIzoozz9QY     .7C...,QM@  YMWcCMMi   ..,:i9WC:cvMMMMM@ ,:i;;vi. ,$\n");
printf("#06S7cvvY77X777CCCt62::Sv    o2,.. tMQ ;@W   CM#     ..:7b@QI8$WW$@@6bEEQQQQ0B@Q\n");
printf("$E6nCYv;;;;;vvY7CU8;   .1E. :b6;.  2@C QMS   7@$....,.   z$QQE6UI2U9QWWWWQWW$WQb\n");
printf("EIz1CX7Yv;;;;vcXZ2       6o;1Y8U: .##, 0@Y   8M$ ..,... ,@0bbb8b8b8bbEEEEEEEEEEb\n");
printf("U7CCCXX7YvvvvvYSC      ,@MY,YvI8i ;M@ .@@,   b@b  ....  W$EbbbbbbbbEEbbbEEEbEE08\n");
printf("UCCtt1nS11CX77XU  ..,.  b$M. vvCY ;M$ :M@. . Q#S ....  C@0bbbbbb8bbbbEbEbEbEbEEb\n");
printf("ZoIzIIUA66AIzSo6 c#C,.   QM  6W,o.2M6 v#6 . ,$#;  ..  .MWbbbbbbbbbbbEbbbbbEbEE0b\n");
printf("b68ZZ8ZbbE0E899W.i$8, X, .Z. MM..iEME bMB   ;#@.  ..  Q#EbbbbbbbbEbEbbbbbbbEbEEb\n");
printf("8AbbZ6998bEEbbbWY.bQ;.bMM.ib,Q#v,.8M$.;MM; :@@2 ...  CM0Ebbbb8bbEbEbbbbbbbbbEbEb\n");
printf("b6EEbZ6669ZbbbbQb IQi..,i@#:,MMWi:6ME. :$M#M#Y ...   @BEbbbbbbbEbEbEbbbbbbbEbEEb\n");
printf("EbWWWEb96U6Z8b0W@ CZ,,672MM;vIM$;ii:,.:,i::,. ....  vMQEbbEbbbEEbEEEEEEEbEEbEE08\n");
printf("QW$#$$WQbbbEEQB$M.:c.v@@$$bv1tY;.,,ii;i:,........   $MQ0bbbEEQWWQWQWWWWBWWWWWB$W\n");
printf("BW###$Wb6U66999U9t;;A@$B0obZWEziic;,,:::,,,,...     8W9UAIUAA6ZZZZ8ZbbbbbbbbbbE8\n");
printf("E8QQQE6zCc;;;;:,,:;X1Xtzn1onCX,.   .......          :C;vvccv;;i;iiiii;;;i;i;;;;:\n");
    }
    else if(Escolher == 3)
    {
printf("8UbEW$$$#####$$$$QQEbZZ6AUI2UUUIUUAA669Z8bEEQQWW$$$$##$\n");
printf("zCzUZbQ$$##@@@##$WQEb9Uo1ttnCCYYvvvY7ttSSzU98EEQQB$$#@$\n");
printf("oCzzA9bQ$#@#@##$$W08AzUbW$W###$QbzzY;:;YXCtnzU9b0QB$$$B\n");
printf("SX1nzA9EQ$@@####BQZZE@M@MM@@#@#@@@@@@Qvic7Ctto268EQWWW0\n");
printf("17nSI6b0W$#@@@@#$0W@MM@@MMM@@@M@#$B$@MMY:v7C1SzU9bQWBWQ\n");
printf("SCozU8bQW$$##@@#W$#@MMMMMMMMMM@M@M@@@MM#Y;;XCSo26bQWB$Q\n");
printf("2CooU68bEQW$@@@$$@MMMMMMMMMMMMMMMMMMM@#MM#XYtnzI9bQW$$$\n");
printf("AoA6AA6Zb0Q$#@##@MMMMMMMMMMMMM@@$Qb91;o#M$27nz268EQ$$$$\n");
printf("bUZZZZZb0QB$@@@#MMMMEzzo2A9o7;:...  ...;@M@CSIA9bQB$$##\n");
printf("E9bb8bbE0W$#@@#@@MM#nS2otCcCo2C7CXYi;7;,XMMSo698bQ$##@@\n");
printf("E9bbEEQQ$$@@@@@@MM#$EAbQ0bo;;XSCX7YYCCCi7MMSIZ8b0W$#@@@\n");
printf("Qb0QQWW$$$#@@@@@@M#Q0QbZIItv,.:;,,;i;vcYSM#S68bEQ$$###$\n");
printf("$W$$$$$$$$$$$#@M##0U9UZb9U8U2S7UE;ic717iiWBUZ8E0W$$$$$$\n");
printf("@#@@$$$$$$WWWQ78Zb9o6Q#MMMMMMM00MMMMMMMQi2;CEEE0QQQ0EQE\n");
printf("@##BBBWQ0EEb0EQoIZAIZb$@MMMMM@; @MMMM#EAci;AQE000E00QQE\n");
printf("#$BWQQE866A9ZbZ#@9AoCCtoZ0b2I8; :C9Qzi,,v$Cb00EEQ00QQQE\n");
printf("#$$QEZ622222U6zQQo6oSnnCv:i777,  .  ,::i;EC00E00QQWWQQE\n");
printf("#$$Q86zSnn1nnIIvCZU26ZbEz7t2S627vY;:,;Y7: t$QQQQQB$$BWE\n");
printf("@$$0b62nnnS1ozAUbEzo6b062ztUMMMMM@;cY;7Y7vWBWW$B$$###$W\n");
printf("@$WEbZAIooSz2I26bQ26bQ6nt7v7obUCi,.:vvvv@M$$$$$##@@#$#$\n");
printf("@$WEb966AIUIIIIAbEAZb6o1CX6bEbbAI82i,i;X@$$$$##@@@M@@##\n");
printf("@#$W0EZ6696968bbE0U89Uoz29bQ0EZ9zI2Yi;;bM$$###@@@@MM@@@\n");
printf("#$$WQEb8b8bbbE0EQQIbbA6A9bEEB$$WW9SvCtzM@$#$#$$$$#####$\n");
printf("EZbb8896A6A99Z6688AZQ08b0bzS7;i. .in67UMBWQQQEbbbEEQQWQ\n");
printf("AnUU6AU2zoozUUA2SSA90WW0QQ$@@@@@@$BWn,1#QEE8Z66A9Z8bEE8\n");
printf("oX1ooznSSoo2IUSXC1A8bE0QEEQWB$$#@#E1viU@QE9UzzozooooSot\n");
printf("1cCC1tC1I6ASCvv908AZbEQ096Q$#$#QICYc7YYbBb2S1tCCX777YYY\n");
printf("Cv7tnozoYi.  nE$QZIZ8E0Qb9bW$@$2vc777C;.v6UC1CXCXXYcvYv\n");
printf("1Y2Aov,    ..:EBWZ268bEQQb0QWW0SXCCX77v:..YCc1Uz17Yvvc;\n");
printf("8Xi.   ..,:i:,.2##I9EEE0QbbQWE2n11t1XYi,. ,6z..YzzCYvc;\n");
printf(",   ..,,:ii:::,.vQ#WBBB0QWQQQE889AUonCi,.t$6i    ,7II17\n");
printf("  ..,,,::::,,:::,,YE#M@#W$#$$#$8b$0oCSCSQE;         YE9\n");
printf(". ,,,,::,,,,:,,,::,,;oEBQ8W$$#UYn667totc,     . ..    7\n");
printf("i.,,,,,,,,,,,:,,,:i:...:ii:iY2Y,.:ii,.         :  ..   \n");
printf("i.::,,,:i:::,,:::,:.......,.,:;;:..       .  . .i  ... \n");
printf(":.i:,,ii::,.,:iii,..........    ..........      .i  .. \n");
printf("i,;,.i;:,..:ii:,.........................,iii    ., .. \n");
printf("::Y::;,..:Yci,....................  ....  .,Yz;  .,... \n");
printf(":,;,,..,;i,.........,,..........  ... ....    Y1. ,... \n");
printf("::i:.:i:.  ..........,,,..............  ..,v., :o,..:..\n");
printf("ciYvii.   ..,,::........,..,,,,,,,,......, .:vi:.C, i,,\n");
    }
    else if(Escolher == 4){
printf("Xi;i:,,.........,.....         ...,iY666218onztztQMMMM#$BQ0bbZ6UAU666699Z88bbbE8\n");
printf("Si;ii:,............                ,Y;    ....     .;#M$0b6UzStC7XXCC1nz2AA9699I\n");
printf("A1U22zo1tCC7Y;;iiiiiiii:,.,.,,,,.;Yivi,iC1tcCci;,,..  zMM$QEbZ6zooozI2I6ZZbbbbEb\n");
printf("S7SooIA66UnC7Yv;iii;i;ii::,::i:.:#oo1o6Zzviiiii;i2viiv..@M$QEb66III98bbbE0QQQQE8\n");
printf("tvCXCCtt1CCCCXC7YcYvvv;;;iiii:..Bov;;vc1A;....,,,:;;Y1Y  YbUUII2Io26b0QQB$#@@@#$\n");
printf("CvXX77XCC7Y7YYYYvYY77CXX77YYvi.CEcii:ii:,  .,....,.,, .;  vXvccYYYY1I8bEQ$@MMMM@\n");
printf("tvCXXXCCnC7Ycvv;;vYYYYvvvvvcc::@bnYi::ii.. .,::,..,,,  ., it7cv;;i;;cYC1z6EW##@@\n");
printf("nvXXXCCnoo1CXCCCCtXY;i::,::::.:@@2i:.,;Yi.. .i:,,...,,  :  v;;;vvcvvcY7XCt1oIAZb\n");
printf("nvCXCC1nIA66666A2SCY;i:,,,,::.:WWo7;iiCY7i:.:vi,,.......;, ...,,:i;;vYYXC1Sz2oII\n");
printf("oYXXXCt1Sz2UI222o1Yc;ii:::,:iiibUn2nCCYYYvi:i;;i::,,,,,,.i,....,,,:ii;;v;;vY71IU\n");
printf("zYC7XXCCtCCCCCttnC7c;ii:::::i::Izoo8bXcv;;,.       ..    :, ..,:iii;vvv;;i:::iYY\n");
printf("X;YYYY7XXCCCC1tnnnC7Yv;i:::i:z9Yn6UUXXCCY;vtZ@Wzv:.,,79bUv.  ..,:i;;vY7Yv;i;;iii\n");
printf("7iv;;;vcYYY7XCtn222ooCC77YYv;b0YC8#IcvC0@MMMMMMMM6::0MMMM2.   ..,:i:ii;;;iivYvc;\n");
printf("7;Yvvvvv;;;;;;;c7t1oozo2SntC7oC@MXE8X;:;IQW@0.z$E7 .MM.;E,   ...,iiiiii;i::;vvYc\n");
printf("1vX7X77Yv;;iiiii;;;;vvccccYYYvC$S,YzzY:. .:cCZSYCY,.XbA:. ....,,icYYYvv;i::;vcCX\n");
printf("ItooooSStC7Yvv;;;;;;iiiiii:i::v;vovCAb17v,.,ivi;Ci.. ,7:..,.,::ivXtC77YYv;i;Y7z9\n");
printf("#QWEb89U2StX7YYvvvv;;iiii:::.i.iYUotnbWbZ27:,.Y2Xv. .: .iv..,:ii;71C7YYcvYY71UbZ\n");
printf("MMM@@#$W0b62tC7Ycvvv;;;;ii,,SU M$@9n1t90Eb1viv8EUb7;,8v ;:.,,:::ivXCXX7YvY7toZ0b\n");
printf("69$@MMMMMM@#$WE8Az1C7cv;;:;EMv M#88Sot1U9QW9C;iYbMME:,S;i...,,,,:i;cYY7YYY7C1oAz\n");
printf("     ,iX2EB@MMMMM@$WQE9otUW@Mb ,M2ZIn1XC7XIZUC7viYYi  ;Y.  .....,:i;cY77777XCnSC\n");
printf("QzXi.       ..i;XIEQE8690WW#@Mi YQbQZ2SC7;i;CEQWb62o1Y:.       ...,,:i;vY7Xt1no7\n");
printf("MMMMMM@$EAtv,   .vnoob$@B#$#@MM. Y$$$QZ2tCnA2oI0$QZCi;:i,..      ...,,:iii;Y7Cnn\n");
printf("MMMMMMMMMMM#09bbEbQWW#MM#@#$#@Mb..XEB##QZ6b2Yi;;;i:.  YM#bUoX;:.. .,,::iiiivYYC7\n");
printf("$QB$B$$WZIoA8QWBB##@@@@@#@@$#@MMY,.v@M@@#BBW87ivC7i. on$M@@@$B0U1z;.:i;vvcYXCnnX\n");
printf("$Q00WQQEEQ$B$###@@@@@@@@$@@#$#@MM:;,i$MMM@MMMMMMM@M@MM@;ZM@@@@@W8ZMbiY77Cnz269ZU\n");
printf("$E@MMMMMMM@@@@@@@@@@@@@@MM@WQ#@@M@:;, ,E@MM@@#2n6@MMM@MC W$B$##@$b6M#2ZZ989bbEEb\n");
    }

}
void EscolherArma(int OpcaoArma)
{
    if(OpcaoArma == 0)
    {
printf("                                            ,,.     \n");
printf("                                       .   ,,i:     \n");
printf("                                    QMMMMMC         \n");
printf("                                   EM$MMMMMQMM      \n");
printf("                                 .;   M@@@MMMMY     \n");
printf("                                 ;   @M@@@@M#W,     \n");
printf("                                ;.  ,MMMMMMb  .     \n");
printf("                                    #M8zZ@M   ;.    \n");
printf("                                    Qt    ..        \n");
printf("                                     Zt7;.. v,      \n");
printf("                                      .;; .WMM      \n");
printf("                                           MMMM     \n");
printf("                                           MM;MM.   \n");
printf("                                     ....  MM  MMMi \n");
printf("                                  ,7i .ii  $M  .@M6 \n");
printf("                                   .i 1AUv MM;      \n");
printf("                                      .ii ,@B@6     \n");
    }
    else if(OpcaoArma==1)
    {


   printf("                  civ;cvYY7:::::MMMM@QW0EEQW6;;;v;      iM         \n");
   printf("                SMMMMMMMMM@ZZbZ#MMEQ#MMMMMMMMMMMMMMbYYcXMM9:       \n");
   printf(",Xn2bB@MMM@ZQB#MM#W$QB#$WEIZ0E#MMMb8ZQ@@@$$W$CXYY9@@ZAAzQ@ov       \n");
   printf("bMMMMMM#bQ$@@@Wb2$AS#8; A@M#@M;   .                                \n");
   printf(".M#QWb8WBBBo;.   bB0i   ,:$MMMW                                    \n");
   printf(" MMMMMWY.       ,MMX       M@@MI                                   \n");
   printf(" Ct,            MMM        .M@@ME                                  \n");
   printf("                iti         ,MM@MMU.                               \n");
   printf("                              WM@MMC                               \n");
   printf("                               ,#MY                                \n");
    }
    else if(OpcaoArma == 2)
    {
printf("                        :$b          \n");
printf("                         MMMM        \n");
printf("                         MMMW  C$.   \n");
printf("                      :QMMMM:CMMMi   \n");
printf("                    .MMMMMMMMM,      \n");
printf("                   $MMMMMMM6         \n");
printf("                ;MMMMQMMMMMi         \n");
printf("              .MM@    MMMMMA         \n");
printf("            ,MMY     2MMMMM8         \n");
printf("           SMM      bMMMMMM          \n");
printf("                    MMMMMM@   MMMM   \n");
printf("           i       ;MMMMMMY  :MMMM   \n");
printf("      .MMMMMM$Y.   AMMMMMMM.  ,b6.   \n");
printf("       Ci,v7oMMMMM#MMMMMMMMM         \n");
printf("               :QMMMMMEM#MMMQ        \n");
printf("                  .71     MMM        \n");
printf("                          MME        \n");
printf("                         2MM.        \n");
printf("                         8MM         \n");
printf("                         MM          \n");
printf("                        YMMMn,       \n");
printf("                         ,.;I6.      \n");
    }
}
